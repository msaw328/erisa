// ERISA - Embeddable Reduced Instruction Set Architecture
// Copyright (C) 2022  Maciej Sawka maciejsawka@gmail.com, msaw328@kretes.xyz

#ifndef _ERISA_ISA_H_
#define _ERISA_ISA_H_

// Macros for each instruction
// INS_ID_<ins>         - ID of the instruction (it is not encoded in machine code, just internal identification of instructions)
// INS_OP_<ins>         - Opcode
// INS_OP_MASK_<ins>    - Mask for opcode matching (it might be not very flexible, mask based matching might change in the future)
// INS_LEN_<ins>        - Length of the instruction in bytes

// Macro which easily matches opcode byte based on mask
#define INS_MATCH(input, instr) ((input & INS_OP_MASK_##instr) == INS_OP_##instr)

// Immediates and addresses and offsets are encoded as little endian everywhere

// Absolute addresses are 32 bit
// Offsets length depend on instruction
// Reg id is from 0 to 15 - 4 bits

// Below entries were autogenerated by codegen.py from src/isa.h.in and data/isa.yaml
%ENTRIES%


#endif

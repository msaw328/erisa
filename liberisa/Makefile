.PHONY: all clear
.DEFAULT_GOAL := all

BUILD_DIR := ../build/liberisa

all: $(BUILD_DIR)/liberisa.so

# Source files
SRC := encoding.c execution.c vm.c

# Generated source files
GEN_SRC := isa.h

# Add the src/ prefix
SRC := $(addprefix src/, $(SRC))
GEN_SRC := $(addprefix src/, $(GEN_SRC))

# Generate object and dependency files from source files
OBJ := $(patsubst src/%.c,$(BUILD_DIR)/%.o, $(SRC))
DEP := $(patsubst src/%.c,$(BUILD_DIR)/%.d, $(SRC))

CFLAGS := -Wall -Wextra -Werror -Wno-unused -pedantic -std=c99 -ffile-prefix-map=./=/ -Iinclude

include $(DEP)

# Each dependency file is generated from the source file
$(BUILD_DIR)/%.d: src/%.c ../build $(GEN_SRC)
	@echo -e "[DEP] $@"
	@$(CC) -MM -MT $(patsubst src/%.c,$(BUILD_DIR)/%.o, $<) $< > $@

$(BUILD_DIR)/%.o: src/%.c
	@echo -e "[CC] $@"
	@$(CC) $(CFLAGS) -c $< -o $@

$(BUILD_DIR)/liberisa.so: $(OBJ)
	@echo -e "[LD] $@"
	@$(CC) -shared $(CFLAGS) $^ -o $@

# Autogenerated files
$(GEN_SRC): codegen.py
	@echo -e "[GEN] $@"
	@python -c 'from codegen import *; targets["$@"]()'

src/isa.h: src/isa.h.in data/isa.yaml

clear:
	rm $(GEN_SRC) __pycache__ -rf
